[{"/Users/gioshathaia/Desktop/odin-project/shopping-cart/src/index.js":"1","/Users/gioshathaia/Desktop/odin-project/shopping-cart/src/App.js":"2","/Users/gioshathaia/Desktop/odin-project/shopping-cart/src/reportWebVitals.js":"3","/Users/gioshathaia/Desktop/odin-project/shopping-cart/src/RouteSwitch.js":"4","/Users/gioshathaia/Desktop/odin-project/shopping-cart/src/ShopPage.js":"5"},{"size":630,"mtime":1678474537090,"results":"6","hashOfConfig":"7"},{"size":640,"mtime":1680841487497,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1678333392784,"results":"9","hashOfConfig":"7"},{"size":412,"mtime":1678656951526,"results":"10","hashOfConfig":"7"},{"size":15598,"mtime":1680829400887,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"amydgv",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"/Users/gioshathaia/Desktop/odin-project/shopping-cart/src/index.js",[],[],[],"/Users/gioshathaia/Desktop/odin-project/shopping-cart/src/App.js",[],[],"/Users/gioshathaia/Desktop/odin-project/shopping-cart/src/reportWebVitals.js",[],[],"/Users/gioshathaia/Desktop/odin-project/shopping-cart/src/RouteSwitch.js",[],[],[],"/Users/gioshathaia/Desktop/odin-project/shopping-cart/src/ShopPage.js",["30","31","32","33","34","35","36"],[],"import React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport Watermelon from './images/watermelon.png';\nimport Apple from './images/apple.png';\nimport Orange from './images/orange.png';\nimport DragonFruit from './images/dragonfruit.png';\nimport Pear from './images/pear.png';\nimport Pineapple from './images/pineapple.png';\n\nfunction ShopPage() {\n  let [toggleHeader, setToggleHeader] = useState(0);\n  let [cartMelonItems, setCartMelonItems] = useState([]);\n  let [cartAppleItems, setCartAppleItems] = useState([]);\n  let [cartOrangeItems, setCartOrangeItems] = useState([]);\n  let [cartDragonItems, setCartDragonItems] = useState([]);\n  let [cartPearItems, setCartPearItems] = useState([]);\n  let [cartPineappleItems, setCartPineappleItems] = useState([]);\n  let [totalCartItems, setTotalCartItems] = useState(0);\n\n  function sumTotal() {\n    setTotalCartItems(prev => prev = cartMelonItems.length + cartAppleItems.length + cartOrangeItems.length + cartDragonItems.length + cartPearItems.length + cartPineappleItems.length);\n  }\n\n  useEffect(() => {\n    const counterDiv = document.querySelector('.counter');\n    console.log(totalCartItems);\n    counterDiv.textContent = 'Total Items: ' + totalCartItems;\n  }, [totalCartItems]);\n\n  useEffect(() => {\n    const existingImages = document.querySelectorAll('.melonImg');\n    existingImages.forEach(melonDiv => {\n      melonDiv.remove();\n    })\n\n      if (cartMelonItems.length !== 0) {\n        const cartDisplay = document.querySelector('.cart');\n        const itemTag = document.createElement('img');\n          itemTag.classList.add('melonImg');\n          itemTag.id = 'cartImg';\n          itemTag.src = Watermelon;\n          cartDisplay.appendChild(itemTag);\n          sumTotal();\n\n        const amount = document.createElement('div');\n        amount.textContent = cartMelonItems.length; // displays amount of each item\n        amount.classList.add('itemAmount');\n        cartDisplay.append(amount);\n        ClearableInput();\n      }\n  }, [cartMelonItems, cartAppleItems, cartOrangeItems, cartDragonItems, cartPearItems, cartPineappleItems]);\n\n  useEffect(() => {\n    const existingImages = document.querySelectorAll('.appleImg');\n    existingImages.forEach(AppleDiv => {\n      AppleDiv.remove();\n    })\n\n    if (cartAppleItems.length !== 0) {\n    const cartDisplay = document.querySelector('.cart');\n    const itemTag = document.createElement('img');\n      itemTag.classList.add('appleImg');\n      itemTag.id = 'cartImg';\n      itemTag.src = Apple;\n      cartDisplay.appendChild(itemTag);\n\n      sumTotal();\n      const amount = document.createElement('div');\n      amount.textContent = cartAppleItems.length; // displays amount of each item\n      amount.classList.add('itemAppleAmount');\n      cartDisplay.append(amount);\n      ClearableInput();\n    }\n  }, [cartMelonItems, cartAppleItems, cartOrangeItems, cartDragonItems, cartPearItems, cartPineappleItems]);\n\n  useEffect(() => {\n    const existingImages = document.querySelectorAll('.orangeImg');\n    existingImages.forEach(OrangeDiv => {\n      OrangeDiv.remove();\n    })\n\n    if (cartOrangeItems.length !== 0) {\n      const cartDisplay = document.querySelector('.cart');\n        const itemTag = document.createElement('img');\n        itemTag.classList.add('orangeImg');\n        itemTag.id = 'cartImg';\n        itemTag.src = Orange;\n        cartDisplay.appendChild(itemTag);\n        sumTotal();\n\n        const amount = document.createElement('div');\n        amount.textContent = cartOrangeItems.length; // displays amount of each item\n        amount.classList.add('itemOrangeAmount');\n        cartDisplay.append(amount);\n        ClearableInput();\n    }\n\n  }, [cartMelonItems, cartAppleItems, cartOrangeItems, cartDragonItems, cartPearItems, cartPineappleItems]);\n\n  useEffect(() => {\n    const existingImages = document.querySelectorAll('.dragonImg');\n    existingImages.forEach(dragonDiv => {\n      dragonDiv.remove();\n    })\n\n    if (cartDragonItems.length !== 0) {\n      const cartDisplay = document.querySelector('.cart');\n        const itemTag = document.createElement('img');\n        itemTag.classList.add('dragonImg');\n        itemTag.id = 'cartImg';\n        itemTag.src = DragonFruit;\n        cartDisplay.appendChild(itemTag);\n        sumTotal();\n\n        const amount = document.createElement('div');\n        amount.textContent = cartDragonItems.length; // displays amount of each item\n        amount.classList.add('itemDragonAmount');\n        cartDisplay.append(amount);\n        ClearableInput();\n    }\n\n  }, [cartMelonItems, cartAppleItems, cartOrangeItems, cartDragonItems, cartPearItems, cartPineappleItems]);\n\n  useEffect(() => {\n    const existingImages = document.querySelectorAll('.pearImg');\n    existingImages.forEach(pearDiv => {\n      pearDiv.remove();\n    })\n\n    if (cartPearItems.length !== 0) {\n      const cartDisplay = document.querySelector('.cart');\n        const itemTag = document.createElement('img');\n        itemTag.classList.add('pearImg');\n        itemTag.id = 'cartImg';\n        itemTag.src = Pear;\n        cartDisplay.appendChild(itemTag);\n        sumTotal();\n\n        const amount = document.createElement('div');\n        amount.textContent = cartPearItems.length; // displays amount of each item\n        amount.classList.add('itemPearAmount');\n        cartDisplay.append(amount);\n        ClearableInput();\n    }\n\n  }, [cartMelonItems, cartAppleItems, cartOrangeItems, cartDragonItems, cartPearItems, cartPineappleItems]);\n\n  useEffect(() => {\n    const existingImages = document.querySelectorAll('.pineappleImg');\n    existingImages.forEach(pineappleDiv => {\n      pineappleDiv.remove();\n    })\n\n    if (cartPineappleItems.length !== 0) {\n      const cartDisplay = document.querySelector('.cart');\n        const itemTag = document.createElement('img');\n        itemTag.classList.add('pineappleImg');\n        itemTag.id = 'cartImg';\n        itemTag.src = Pineapple;\n        cartDisplay.appendChild(itemTag);\n        sumTotal();\n\n        const amount = document.createElement('div');\n        amount.textContent = cartPineappleItems.length; // displays amount of each item\n        amount.classList.add('itemPineappleAmount');\n        cartDisplay.append(amount);\n        ClearableInput();\n    }\n\n  }, [cartMelonItems, cartAppleItems, cartOrangeItems, cartDragonItems, cartPearItems, cartPineappleItems]);\n\n  function ShowCart() {\n    const cartDisplay = document.querySelector('.cart');\n    const checkoutBtn = document.querySelector('.checkout');\n      if (toggleHeader === 0) {\n        checkoutBtn.style.display = 'flex'\n        cartDisplay.style.display = 'flex';\n        setToggleHeader(prev => prev = 1);\n      }\n      else {\n        setToggleHeader(prev => prev = 0);\n        checkoutBtn.style.display = 'none';\n        cartDisplay.style.display = 'none';\n      }\n  }\n\n  function displayMelonCart() {\n    const existingImages = document.querySelectorAll('.melonImg');\n    existingImages.forEach(melonDiv => {\n      melonDiv.remove();\n    });\n    const existingAmount = document.querySelectorAll('.itemAmount');\n      existingAmount.forEach(amount => {\n      amount.remove();\n    });\n\n    const cartDisplay = document.querySelector('.cart');\n    const checkoutBtn = document.querySelector('.checkout');\n    const melonBoxVal = document.querySelector('.melonBox').value;\n    cartDisplay.style.display = 'flex';\n    checkoutBtn.style.display = 'flex';\n    let img = Watermelon;\n    setToggleHeader(prev => prev = 1);\n    console.log(melonBoxVal);\n    if (melonBoxVal > 0 && melonBoxVal <= 10000) {\n        for (let i = 0; i < melonBoxVal; i++) {\n          setCartMelonItems(prev => prev.concat(img));\n      }\n    }\n    displayAppleCart();\n  }\n\n  function displayAppleCart() {\n    const existingImages = document.querySelectorAll('.appleImg');\n    existingImages.forEach(AppleDiv => {\n      AppleDiv.remove();\n    })\n\n    const existingAmount = document.querySelectorAll('.itemAppleAmount');\n    existingAmount.forEach(amount => {\n      amount.remove();\n    })\n\n    const appleBoxVal = document.querySelector('.appleBox').value;\n    let img = Apple;\n    setToggleHeader(prev => prev = 1);\n    if (appleBoxVal > 0 && appleBoxVal <= 10000) { // just put a number next to img, maybe inline onto the pic?\n      for (let i = 0; i < appleBoxVal; i++) {\n        setCartAppleItems(prev => prev.concat(img));\n      }\n    }\n    displayOrangeCart();\n  }\n\n  function displayOrangeCart() {\n    const existingImages = document.querySelectorAll('.orangeImg');\n    existingImages.forEach(OrangeDiv => {\n      OrangeDiv.remove();\n    })\n\n    const existingAmount = document.querySelectorAll('.itemOrangeAmount');\n    existingAmount.forEach(amount => {\n      amount.remove();\n    })\n\n    let orangeBoxVal = document.querySelector('.orangeBox').value;\n    let img = Orange;\n    setToggleHeader(prev => prev = 1);\n    if (orangeBoxVal > 0 && orangeBoxVal <= 10000) {\n      for (let i = 0; i < orangeBoxVal; i++) {\n        setCartOrangeItems(prev => prev.concat(img));\n      }\n    }\n    displayDragonCart();\n  }\n\n  function displayDragonCart() {\n    const existingImages = document.querySelectorAll('.dragonImg');\n    existingImages.forEach(dragonDiv => {\n      dragonDiv.remove();\n    })\n\n    const existingAmount = document.querySelectorAll('.itemDragonAmount');\n    existingAmount.forEach(amount => {\n      amount.remove();\n    })\n\n    let boxVal = document.querySelector('.dragonBox').value;\n    let img = DragonFruit;\n    setToggleHeader(prev => prev = 1);\n    if (boxVal > 0 && boxVal <= 10000) {\n      for (let i = 0; i < boxVal; i++) {\n        setCartDragonItems(prev => prev.concat(img));\n      }\n    }\n    displayPearCart();\n  }\n\n  function displayPearCart() {\n    const existingImages = document.querySelectorAll('.pearImg');\n    existingImages.forEach(dragonDiv => {\n      dragonDiv.remove();\n    })\n\n    const existingAmount = document.querySelectorAll('.itemPearAmount');\n    existingAmount.forEach(amount => {\n      amount.remove();\n    })\n\n    let boxVal = document.querySelector('.pearBox').value;\n    let img = Pear;\n    setToggleHeader(prev => prev = 1);\n    if (boxVal > 0 && boxVal <= 10000) {\n      for (let i = 0; i < boxVal; i++) {\n        setCartPearItems(prev => prev.concat(img));\n      }\n    }\n    displayPineappleCart();\n  }\n\n  function displayPineappleCart() {\n    const existingImages = document.querySelectorAll('.pineappleImg');\n    existingImages.forEach(pineappleDiv => {\n      pineappleDiv.remove();\n    })\n\n    const existingAmount = document.querySelectorAll('.itemPineappleAmount');\n    existingAmount.forEach(amount => {\n      amount.remove();\n    })\n\n    let boxVal = document.querySelector('.pineappleBox').value;\n    let img = Pineapple;\n    setToggleHeader(prev => prev = 1);\n    if (boxVal > 0 && boxVal <= 10000) {\n      for (let i = 0; i < boxVal; i++) {\n        setCartPineappleItems(prev => prev.concat(img));\n      }\n    }\n  }\n\n  function ClearCart() {\n    setCartMelonItems(prev => prev = []);\n    setCartAppleItems(prev => prev = []);\n    setCartOrangeItems(prev => prev = []);\n    setCartDragonItems(prev => prev = []);\n    setCartPearItems(prev => prev = []);\n    setCartPineappleItems(prev => prev = []);\n    ShowCart();\n  }\n\n  // will clear textboxes after submission =>\n  const inputRef = useRef();\n  const inputAppleRef = useRef();\n  const inputOrangeRef = useRef();\n  const inputDragonRef = useRef();\n  const inputPearsRef = useRef();\n  const inputPineappleRef = useRef();\n  const ClearableInput = () => {\n      inputRef.current.value = '';\n      inputAppleRef.current.value = '';\n      inputOrangeRef.current.value = '';\n      inputDragonRef.current.value = '';\n      inputPearsRef.current.value = '';\n      inputPineappleRef.current.value = '';\n  }\n\n  // set props for home page with cart contents to be sent over when cart is display block on home page\n    return (\n        <div>\n            <div className='cart'>\n                <h3>Cart</h3>\n            </div>\n            <div className='checkout'>\n                <h3 className='counter'></h3>\n                <button onClick={ClearCart} className='checkoutBtn'>Checkout (Clears Cart)</button>\n            </div>\n            <div className='header'>\n            <Link to='/shopping-cart' className='BackHome'><h3>Home</h3></Link>\n                <h3 style={{color: 'black'}}>Catalog</h3>\n            </div>\n            <div className=\"cardContainerWrapper\">\n              <div className='cardContain'>\n                  <div className='card'>\n                      <img className='fruitPics'src={Watermelon} alt=''></img>\n                      <label htmlFor='numberBox'>Number of Watermelons\n                        <input className='melonBox' type='number' min='1' max='10' ref={inputRef} onKeyPress={(event) => {\n          if (!/[1-9]/.test(event.key)) {\n            event.preventDefault();\n          }}}></input>\n                      </label>\n                  </div>\n                  <div className='card'>\n                      <img className='fruitPics' src={Apple} alt=''></img>\n                      <label htmlFor='numberBox'>Number of Apples\n                        <input className='appleBox' type='number' min='1' max='10' ref={inputAppleRef} onKeyPress={(event) => {\n          if (!/[1-9]/.test(event.key)) {\n            event.preventDefault();\n          }}}></input>\n                      </label>\n                  </div>\n                  <div className='card'>\n                      <img className='fruitPics' src={Orange} alt=''></img>\n                      <label htmlFor='numberBox'>Number of Oranges\n                        <input className='orangeBox' type='number' min='1' max='10' ref={inputOrangeRef} onKeyPress={(event) => {\n          if (!/[1-9]/.test(event.key)) {\n            event.preventDefault();\n          }}}></input>\n                      </label>\n                  </div>\n                  <div className='card'>\n                      <img className='fruitPics' src={DragonFruit} alt=''></img>\n                      <label htmlFor='numberBox'>Number of Dragonfruits\n                        <input className='dragonBox' type='number' min='1' max='10' ref={inputDragonRef} onKeyPress={(event) => {\n          if (!/[1-9]/.test(event.key)) {\n            event.preventDefault();\n          }}}></input>\n                      </label>\n                  </div>\n                  <div className='card'>\n                      <img className='fruitPics' src={Pear} alt=''></img>\n                      <label htmlFor='numberBox'>Number of Pears\n                        <input className='pearBox' type='number' min='1' max='10' ref={inputPearsRef} onKeyPress={(event) => {\n          if (!/[1-9]/.test(event.key)) {\n            event.preventDefault();\n          }}}></input>\n                      </label>\n                      <div className='addCartContain'>\n                        <button onClick={displayMelonCart} className='addCart'>Add To Cart</button>\n                      </div>\n                  </div>\n                  <div className='card'>\n                      <img className='fruitPics' src={Pineapple} alt=''></img>\n                      <label htmlFor='numberBox'>Number of Pineapples\n                        <input className='pineappleBox' type='number' min='1' max='10' ref={inputPineappleRef} onKeyPress={(event) => {\n          if (!/[1-9]/.test(event.key)) {\n            event.preventDefault();\n          }}}></input>\n                      </label>\n                  </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ShopPage;",{"ruleId":"37","severity":1,"message":"38","line":51,"column":6,"nodeType":"39","endLine":51,"endColumn":107,"suggestions":"40"},{"ruleId":"37","severity":1,"message":"38","line":74,"column":6,"nodeType":"39","endLine":74,"endColumn":107,"suggestions":"41"},{"ruleId":"37","severity":1,"message":"38","line":98,"column":6,"nodeType":"39","endLine":98,"endColumn":107,"suggestions":"42"},{"ruleId":"37","severity":1,"message":"38","line":122,"column":6,"nodeType":"39","endLine":122,"endColumn":107,"suggestions":"43"},{"ruleId":"37","severity":1,"message":"38","line":146,"column":6,"nodeType":"39","endLine":146,"endColumn":107,"suggestions":"44"},{"ruleId":"37","severity":1,"message":"38","line":170,"column":6,"nodeType":"39","endLine":170,"endColumn":107,"suggestions":"45"},{"ruleId":"46","severity":1,"message":"47","line":355,"column":17,"nodeType":"48","endLine":355,"endColumn":41},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sumTotal'. Either include it or remove the dependency array.","ArrayExpression",["49"],["50"],["51"],["52"],["53"],["54"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement",{"desc":"55","fix":"56"},{"desc":"55","fix":"57"},{"desc":"55","fix":"58"},{"desc":"55","fix":"59"},{"desc":"55","fix":"60"},{"desc":"55","fix":"61"},"Update the dependencies array to be: [cartMelonItems, cartAppleItems, cartOrangeItems, cartDragonItems, cartPearItems, cartPineappleItems, sumTotal]",{"range":"62","text":"63"},{"range":"64","text":"63"},{"range":"65","text":"63"},{"range":"66","text":"63"},{"range":"67","text":"63"},{"range":"68","text":"63"},[2035,2136],"[cartMelonItems, cartAppleItems, cartOrangeItems, cartDragonItems, cartPearItems, cartPineappleItems, sumTotal]",[2855,2956],[3710,3811],[4570,4671],[5409,5510],[6288,6389]]